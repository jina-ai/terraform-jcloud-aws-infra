image:
  repository: grafana/loki
  tag: 2.7.0
  pullPolicy: IfNotPresent

config:
  # existingSecret:
  auth_enabled: false

  memberlist:
    join_members:
      # the value must be defined as string to be evaluated when secret manifest is being generating
      - '{{ include "loki.fullname" . }}-memberlist'

  ingester:
    chunk_idle_period: 1m
    chunk_retain_period: 30s
    wal:
      enabled: false
      dir: /data/loki/wal
    lifecycler:
      ring:
        replication_factor: 1
      final_sleep: 0s

      ## Different ring configs can be used. E.g. Consul
      # ring:
      #   store: consul
      #   replication_factor: 1
      #   consul:
      #     host: "consul:8500"
      #     prefix: ""
      #     http_client_timeout: "20s"
      #     consistent_reads: true
  limits_config:
    enforce_metric_name: false
    reject_old_samples: true
    reject_old_samples_max_age: 168h
  schema_config:
    configs:
    - from: 2022-01-20
      store: boltdb-shipper
      object_store: aws
      schema: v11
      index:
        prefix: index_
        period: 24h
      chunks:
        prefix: chunks_
        period: 24h
  server:
    http_listen_port: 3100
    grpc_listen_port: 9095
    log_level: info
  chunk_store_config:
    chunk_cache_config:
      enable_fifocache: false
    write_dedupe_cache_config:
      enable_fifocache: false
  storage_config:
    index_cache_validity: 1m
    boltdb_shipper:
      active_index_directory: /data/loki/boltdb-shipper-active
      cache_location: /data/loki/boltdb-shipper-cache
      shared_store: s3
      cache_ttl: 1m
      resync_interval: 5s
    aws:
      s3forcepathstyle: true
      bucketnames: "$MONITOR_LOG_BUCKET"
      region: "$MONITOR_REGION"
      access_key_id: "$MONITOR_USER_ACCESS_KEY"
      secret_access_key: "$MONITOR_USER_SECRET_KEY"
    index_queries_cache_config:
      enable_fifocache: false
  table_manager:
    retention_deletes_enabled: false
  compactor:
    shared_store: s3
    compaction_interval: 5m
    working_directory: /data/loki/boltdb-shipper-compactor
  frontend:
    # From https://github.com/grafana/loki/issues/4613

    # Maximum number of outstanding requests per tenant per frontend; requests
    # beyond this error with HTTP 429.
    # CLI flag: -querier.max-outstanding-requests-per-tenant
    max_outstanding_per_tenant: 4096 # default = 100]

    # Compress HTTP responses.
    # CLI flag: -querier.compress-http-responses
    compress_responses: true # default = false]

    # Log queries that are slower than the specified duration. Set to 0 to disable.
    # Set to < 0 to enable on all queries.
    # CLI flag: -frontend.log-queries-longer-than
    log_queries_longer_than: 20s
  query_scheduler:
    max_outstanding_requests_per_tenant: 2048
  query_range:
    split_queries_by_interval: 0

nodeSelector:
  jina.ai/node-type: system
## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
## If you set enabled as "True", you need :
## - create a pv which above 10Gi and has same namespace with loki
## - keep storageClassName same with below setting
persistence:
  enabled: true
  accessModes:
  - ReadWriteOnce
  size: 20Gi
  labels: {}
  annotations: {}
  storageClassName: gp2
  # selector:
  #   matchLabels:
  #     app.kubernetes.io/name: loki
  # subPath: ""
  # existingClaim:
  # storageClassName:

## Pod Annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "http-metrics"

replicas: 1